data = read.csv('n1_r0_x3.latency.csv', header=T)
 ggplot(data) + geom_ribbon(aes(timestamp, ymin=p99_min, ymax=p99_max)) + geom_line(aes(timestamp, mean))
library(ggplot2)
 ggplot(data) + geom_ribbon(aes(timestamp, ymin=p99_min, ymax=p99_max)) + geom_line(aes(timestamp, mean))
library(ggplot2)
data
 ggplot(data) + geom_ribbon(aes(timestamp, ymin=p99_min, ymax=p99_max)) + geom_line(aes(timestamp, mean))
 ggplot(data) + geom_line(aes(timestamp, mean))
metl
melt
library(reshape2)
data_ml = melt(data, id="timestamp")
ggplot(data=data_ml, ars(x=timestamp, y=values, colour=variable)) + geom_line()
ggplot(data=data_ml, aes(x=timestamp, y=values, colour=variable)) + geom_line()
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
png('n1_r0_x3.latency.png')
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
png('n1_r0_x3.latency.png', width=3000, height=1080, units="px"))
png('n1_r0_x3.latency.png', width=3000, height=1080, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
png('n1_r0_x3.latency.png',  height=1080, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
png('n1_r0_x3.latency.png', width=1000, height=1000, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
png('n1_r0_x3.latency.png', width=3000, height=2500, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
png('n1_r0_x3.latency.png', width=800, height=500, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
library(reshape2)
library(ggplot2)
data = read.csv('n2_r0_x1.latency.csv', header=T)
data_ml = melt(data, id="timestamp")
png('n2_r0_x1.latency.png', width=800, height=500, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
data = read.csv('n2_r0_x1.throughput.csv', header=T)
data_ml = melt(data, id="timestamp")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
head(data)
head(data, 100)
max(data$source)
max(data$splitSentence)
max(data$wordCount)
png('n2_r0_x1.throughput.png')
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
png('n2_r0_x1.throughput.png', width=1200, height=800, units="px")
ggplot(data=data_ml, aes(x=timestamp, y=value, colour=variable)) + geom_line()
dev.off()
hist(data$source)
max(data$source)
max(data$splitSentence)
hist(data$splitSentence)
hist(data$splitSentence, xlim=1000)
range(0,10)
hist(data$splitSentence, xlim=range(0,1000))
hist(data$splitSentence, xlim=range(0,100000))
hist(data$splitSentence, xlim=range(0,max(data$splitSentence)))
hist(data$splitSentence, xlim=range(1,max(data$splitSentence)))
hist(data$splitSentence, xlim=range(100,max(data$splitSentence)))
hist(data$splitSentence, xlim=range(1000,max(data$splitSentence)))
hist(data$splitSentence, xlim=range(10000,max(data$splitSentence)))
mem_usage <- read.csv('output/resources.espbench-0.csv', header=TRUE)
head(mem_usage)
library(plyr)
library(ggplot2)
ggplot(mem_usage, aes(timestamp) + geom_line(aes(y=mem_used), colour='red')
)
ggplot(mem_usage, aes(timestamp)) + geom_line(aes(y=mem_used), colour='red')
ggplot(mem_usage, aes(timestamp)) + geom_line(aes(y=cpu_used), colour='red')
ggplot(mem_usage, aes(timestamp)) + geom_line(aes(y=net_recv), colour='red')
ggplot(mem_usage, aes(timestamp)) + geom_line(aes(y=net_sent), colour='red')
ggplot(mem_usage, aes(timestamp)) + geom_line(aes(y=net_sent), colour='red') + geom_line(aes(y=net_recv), colour='blue')
newmem <- ddply(mem_usage, .(timestamp, mem_used), function(x) {
data.frame(timestamp=x$timestamp, value=x$mem_used)
})
newmem <- ddply(mem_usage, .(timestamp, mem_used), function(x) {
data.frame(timestamp=x$timestamp, value=x$mem_used)
})
newmem
head(newmem)
newmem <- ddply(mem_usage, .(timestamp, mem_used), function(x) {
data.frame(timestamp=x$timestamp, mem_used=x$mem_used)
})
